/*
 * generated by Xtext 2.26.0
 */
grammar InternalHOModel;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.consensus.homodel.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.consensus.homodel.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.consensus.homodel.services.HOModelGrammarAccess;

}
@parser::members {
	private HOModelGrammarAccess grammarAccess;

	public void setGrammarAccess(HOModelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleAlgorithm
entryRuleAlgorithm
:
{ before(grammarAccess.getAlgorithmRule()); }
	 ruleAlgorithm
{ after(grammarAccess.getAlgorithmRule()); } 
	 EOF 
;

// Rule Algorithm
ruleAlgorithm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlgorithmAccess().getGroup()); }
		(rule__Algorithm__Group__0)
		{ after(grammarAccess.getAlgorithmAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarialbeDeclaration
entryRuleVarialbeDeclaration
:
{ before(grammarAccess.getVarialbeDeclarationRule()); }
	 ruleVarialbeDeclaration
{ after(grammarAccess.getVarialbeDeclarationRule()); } 
	 EOF 
;

// Rule VarialbeDeclaration
ruleVarialbeDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarialbeDeclarationAccess().getGroup()); }
		(rule__VarialbeDeclaration__Group__0)
		{ after(grammarAccess.getVarialbeDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDecList
entryRuleVariableDecList
:
{ before(grammarAccess.getVariableDecListRule()); }
	 ruleVariableDecList
{ after(grammarAccess.getVariableDecListRule()); } 
	 EOF 
;

// Rule VariableDecList
ruleVariableDecList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDecListAccess().getGroup()); }
		(rule__VariableDecList__Group__0)
		{ after(grammarAccess.getVariableDecListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableNameList
entryRuleVariableNameList
:
{ before(grammarAccess.getVariableNameListRule()); }
	 ruleVariableNameList
{ after(grammarAccess.getVariableNameListRule()); } 
	 EOF 
;

// Rule VariableNameList
ruleVariableNameList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableNameListAccess().getGroup()); }
		(rule__VariableNameList__Group__0)
		{ after(grammarAccess.getVariableNameListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomain
entryRuleDomain
:
{ before(grammarAccess.getDomainRule()); }
	 ruleDomain
{ after(grammarAccess.getDomainRule()); } 
	 EOF 
;

// Rule Domain
ruleDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainAccess().getGroup()); }
		(rule__Domain__Group__0)
		{ after(grammarAccess.getDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoundList
entryRuleRoundList
:
{ before(grammarAccess.getRoundListRule()); }
	 ruleRoundList
{ after(grammarAccess.getRoundListRule()); } 
	 EOF 
;

// Rule RoundList
ruleRoundList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getRoundListAccess().getGroup()); }
			(rule__RoundList__Group__0)
			{ after(grammarAccess.getRoundListAccess().getGroup()); }
		)
		(
			{ before(grammarAccess.getRoundListAccess().getGroup()); }
			(rule__RoundList__Group__0)*
			{ after(grammarAccess.getRoundListAccess().getGroup()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRound
entryRuleRound
:
{ before(grammarAccess.getRoundRule()); }
	 ruleRound
{ after(grammarAccess.getRoundRule()); } 
	 EOF 
;

// Rule Round
ruleRound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoundAccess().getGroup()); }
		(rule__Round__Group__0)
		{ after(grammarAccess.getRoundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSendPart
entryRuleSendPart
:
{ before(grammarAccess.getSendPartRule()); }
	 ruleSendPart
{ after(grammarAccess.getSendPartRule()); } 
	 EOF 
;

// Rule SendPart
ruleSendPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSendPartAccess().getAlternatives()); }
		(rule__SendPart__Alternatives)
		{ after(grammarAccess.getSendPartAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMessage
entryRuleMessage
:
{ before(grammarAccess.getMessageRule()); }
	 ruleMessage
{ after(grammarAccess.getMessageRule()); } 
	 EOF 
;

// Rule Message
ruleMessage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMessageAccess().getAlternatives()); }
		(rule__Message__Alternatives)
		{ after(grammarAccess.getMessageAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransitionPart
entryRuleTransitionPart
:
{ before(grammarAccess.getTransitionPartRule()); }
	 ruleTransitionPart
{ after(grammarAccess.getTransitionPartRule()); } 
	 EOF 
;

// Rule TransitionPart
ruleTransitionPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionPartAccess().getStatementListParserRuleCall()); }
		ruleStatementList
		{ after(grammarAccess.getTransitionPartAccess().getStatementListParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInvariant
entryRuleInvariant
:
{ before(grammarAccess.getInvariantRule()); }
	 ruleInvariant
{ after(grammarAccess.getInvariantRule()); } 
	 EOF 
;

// Rule Invariant
ruleInvariant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvariantAccess().getGroup()); }
		(rule__Invariant__Group__0)
		{ after(grammarAccess.getInvariantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnivalence
entryRuleUnivalence
:
{ before(grammarAccess.getUnivalenceRule()); }
	 ruleUnivalence
{ after(grammarAccess.getUnivalenceRule()); } 
	 EOF 
;

// Rule Univalence
ruleUnivalence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnivalenceAccess().getGroup()); }
		(rule__Univalence__Group__0)
		{ after(grammarAccess.getUnivalenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementList
entryRuleStatementList
:
{ before(grammarAccess.getStatementListRule()); }
	 ruleStatementList
{ after(grammarAccess.getStatementListRule()); } 
	 EOF 
;

// Rule StatementList
ruleStatementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementListAccess().getGroup()); }
		(rule__StatementList__Group__0)
		{ after(grammarAccess.getStatementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getAlternatives()); }
		(rule__Variable__Alternatives)
		{ after(grammarAccess.getVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNormalVariable
entryRuleNormalVariable
:
{ before(grammarAccess.getNormalVariableRule()); }
	 ruleNormalVariable
{ after(grammarAccess.getNormalVariableRule()); } 
	 EOF 
;

// Rule NormalVariable
ruleNormalVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNormalVariableAccess().getNameAssignment()); }
		(rule__NormalVariable__NameAssignment)
		{ after(grammarAccess.getNormalVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayVariable
entryRuleArrayVariable
:
{ before(grammarAccess.getArrayVariableRule()); }
	 ruleArrayVariable
{ after(grammarAccess.getArrayVariableRule()); } 
	 EOF 
;

// Rule ArrayVariable
ruleArrayVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayVariableAccess().getGroup()); }
		(rule__ArrayVariable__Group__0)
		{ after(grammarAccess.getArrayVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecision
entryRuleDecision
:
{ before(grammarAccess.getDecisionRule()); }
	 ruleDecision
{ after(grammarAccess.getDecisionRule()); } 
	 EOF 
;

// Rule Decision
ruleDecision 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecisionAccess().getGroup()); }
		(rule__Decision__Group__0)
		{ after(grammarAccess.getDecisionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConjunctiveExpression
entryRuleConjunctiveExpression
:
{ before(grammarAccess.getConjunctiveExpressionRule()); }
	 ruleConjunctiveExpression
{ after(grammarAccess.getConjunctiveExpressionRule()); } 
	 EOF 
;

// Rule ConjunctiveExpression
ruleConjunctiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConjunctiveExpressionAccess().getGroup()); }
		(rule__ConjunctiveExpression__Group__0)
		{ after(grammarAccess.getConjunctiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
		(rule__EqualityExpression__Group__0)
		{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
		(rule__RelationalExpression__Group__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleExpression
entryRuleSimpleExpression
:
{ before(grammarAccess.getSimpleExpressionRule()); }
	 ruleSimpleExpression
{ after(grammarAccess.getSimpleExpressionRule()); } 
	 EOF 
;

// Rule SimpleExpression
ruleSimpleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleExpressionAccess().getGroup()); }
		(rule__SimpleExpression__Group__0)
		{ after(grammarAccess.getSimpleExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getGroup()); }
		(rule__Term__Group__0)
		{ after(grammarAccess.getTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactor
entryRuleFactor
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getAlternatives()); }
		(rule__Factor__Alternatives)
		{ after(grammarAccess.getFactorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSIMPLE_CONSTANT
entryRuleSIMPLE_CONSTANT
:
{ before(grammarAccess.getSIMPLE_CONSTANTRule()); }
	 ruleSIMPLE_CONSTANT
{ after(grammarAccess.getSIMPLE_CONSTANTRule()); } 
	 EOF 
;

// Rule SIMPLE_CONSTANT
ruleSIMPLE_CONSTANT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSIMPLE_CONSTANTAccess().getAlternatives()); }
		(rule__SIMPLE_CONSTANT__Alternatives)
		{ after(grammarAccess.getSIMPLE_CONSTANTAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleINITIAL_CONST
entryRuleINITIAL_CONST
:
{ before(grammarAccess.getINITIAL_CONSTRule()); }
	 ruleINITIAL_CONST
{ after(grammarAccess.getINITIAL_CONSTRule()); } 
	 EOF 
;

// Rule INITIAL_CONST
ruleINITIAL_CONST 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getINITIAL_CONSTAccess().getAlternatives()); }
		(rule__INITIAL_CONST__Alternatives)
		{ after(grammarAccess.getINITIAL_CONSTAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCONSTANT
entryRuleCONSTANT
:
{ before(grammarAccess.getCONSTANTRule()); }
	 ruleCONSTANT
{ after(grammarAccess.getCONSTANTRule()); } 
	 EOF 
;

// Rule CONSTANT
ruleCONSTANT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCONSTANTAccess().getAlternatives()); }
		(rule__CONSTANT__Alternatives)
		{ after(grammarAccess.getCONSTANTAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendPartAccess().getGroup_0()); }
		(rule__SendPart__Group_0__0)
		{ after(grammarAccess.getSendPartAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSendPartAccess().getGroup_1()); }
		(rule__SendPart__Group_1__0)
		{ after(grammarAccess.getSendPartAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Alternatives_0_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendPartAccess().getAllKeyword_0_8_0()); }
		'All'
		{ after(grammarAccess.getSendPartAccess().getAllKeyword_0_8_0()); }
	)
	|
	(
		{ before(grammarAccess.getSendPartAccess().getCoordKeyword_0_8_1()); }
		'Coord'
		{ after(grammarAccess.getSendPartAccess().getCoordKeyword_0_8_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Alternatives_0_10_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendPartAccess().getAllKeyword_0_10_5_0()); }
		'All'
		{ after(grammarAccess.getSendPartAccess().getAllKeyword_0_10_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getSendPartAccess().getCoordKeyword_0_10_5_1()); }
		'Coord'
		{ after(grammarAccess.getSendPartAccess().getCoordKeyword_0_10_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Alternatives_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendPartAccess().getAllKeyword_1_4_0()); }
		'All'
		{ after(grammarAccess.getSendPartAccess().getAllKeyword_1_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getSendPartAccess().getCoordKeyword_1_4_1()); }
		'Coord'
		{ after(grammarAccess.getSendPartAccess().getCoordKeyword_1_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageAccess().getGroup_0()); }
		(rule__Message__Group_0__0)
		{ after(grammarAccess.getMessageAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMessageAccess().getGroup_1()); }
		(rule__Message__Group_1__0)
		{ after(grammarAccess.getMessageAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Alternatives_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageAccess().getMsgAssignment_0_1_1_0()); }
		(rule__Message__MsgAssignment_0_1_1_0)
		{ after(grammarAccess.getMessageAccess().getMsgAssignment_0_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMessageAccess().getCoordKeyword_0_1_1_1()); }
		'Coord'
		{ after(grammarAccess.getMessageAccess().getCoordKeyword_0_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Alternatives_0_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageAccess().getMsgAssignment_0_1_2_1_0()); }
		(rule__Message__MsgAssignment_0_1_2_1_0)
		{ after(grammarAccess.getMessageAccess().getMsgAssignment_0_1_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMessageAccess().getCoordKeyword_0_1_2_1_1()); }
		'Coord'
		{ after(grammarAccess.getMessageAccess().getCoordKeyword_0_1_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_0()); }
		ruleAssignment
		{ after(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDecisionParserRuleCall_1()); }
		ruleDecision
		{ after(grammarAccess.getStatementAccess().getDecisionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_2()); }
		(rule__Statement__Group_2__0)
		{ after(grammarAccess.getStatementAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_3()); }
		(rule__Statement__Group_3__0)
		{ after(grammarAccess.getStatementAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_4()); }
		(rule__Statement__Group_4__0)
		{ after(grammarAccess.getStatementAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_5()); }
		(rule__Statement__Group_5__0)
		{ after(grammarAccess.getStatementAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_6()); }
		(rule__Statement__Group_6__0)
		{ after(grammarAccess.getStatementAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNormalVariableParserRuleCall_0()); }
		ruleNormalVariable
		{ after(grammarAccess.getVariableAccess().getNormalVariableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getArrayVariableParserRuleCall_1()); }
		ruleArrayVariable
		{ after(grammarAccess.getVariableAccess().getArrayVariableParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getEqualsSignEqualsSignKeyword_1_0_0()); }
		'=='
		{ after(grammarAccess.getEqualityExpressionAccess().getEqualsSignEqualsSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getExclamationMarkEqualsSignKeyword_1_0_1()); }
		'!='
		{ after(grammarAccess.getEqualityExpressionAccess().getExclamationMarkEqualsSignKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getLessThanSignKeyword_1_0_0()); }
		'<'
		{ after(grammarAccess.getRelationalExpressionAccess().getLessThanSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getLessThanSignEqualsSignKeyword_1_0_1()); }
		'<='
		{ after(grammarAccess.getRelationalExpressionAccess().getLessThanSignEqualsSignKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGreaterThanSignKeyword_1_0_2()); }
		'>'
		{ after(grammarAccess.getRelationalExpressionAccess().getGreaterThanSignKeyword_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGreaterThanSignEqualsSignKeyword_1_0_3()); }
		'>='
		{ after(grammarAccess.getRelationalExpressionAccess().getGreaterThanSignEqualsSignKeyword_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleExpressionAccess().getPlusSignKeyword_1_0_0()); }
		'+'
		{ after(grammarAccess.getSimpleExpressionAccess().getPlusSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleExpressionAccess().getHyphenMinusKeyword_1_0_1()); }
		'-'
		{ after(grammarAccess.getSimpleExpressionAccess().getHyphenMinusKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getAsteriskKeyword_1_0_0()); }
		'*'
		{ after(grammarAccess.getTermAccess().getAsteriskKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getSolidusKeyword_1_0_1()); }
		'/'
		{ after(grammarAccess.getTermAccess().getSolidusKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getVariableParserRuleCall_0()); }
		ruleVariable
		{ after(grammarAccess.getFactorAccess().getVariableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_1()); }
		(rule__Factor__Group_1__0)
		{ after(grammarAccess.getFactorAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_2()); }
		(rule__Factor__Group_2__0)
		{ after(grammarAccess.getFactorAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_3()); }
		(rule__Factor__Group_3__0)
		{ after(grammarAccess.getFactorAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_4()); }
		(rule__Factor__Group_4__0)
		{ after(grammarAccess.getFactorAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_5()); }
		(rule__Factor__Group_5__0)
		{ after(grammarAccess.getFactorAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIMPLE_CONSTANT__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIMPLE_CONSTANTAccess().getQuestionMarkKeyword_0()); }
		'?'
		{ after(grammarAccess.getSIMPLE_CONSTANTAccess().getQuestionMarkKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSIMPLE_CONSTANTAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getSIMPLE_CONSTANTAccess().getFalseKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getSIMPLE_CONSTANTAccess().getTrueKeyword_2()); }
		'true'
		{ after(grammarAccess.getSIMPLE_CONSTANTAccess().getTrueKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getSIMPLE_CONSTANTAccess().getEMPTYKeyword_3()); }
		'EMPTY'
		{ after(grammarAccess.getSIMPLE_CONSTANTAccess().getEMPTYKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getSIMPLE_CONSTANTAccess().getPidKeyword_4()); }
		'pid'
		{ after(grammarAccess.getSIMPLE_CONSTANTAccess().getPidKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getSIMPLE_CONSTANTAccess().getNUMBERTerminalRuleCall_5()); }
		RULE_NUMBER
		{ after(grammarAccess.getSIMPLE_CONSTANTAccess().getNUMBERTerminalRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__INITIAL_CONST__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getINITIAL_CONSTAccess().getSIMPLE_CONSTANTParserRuleCall_0()); }
		ruleSIMPLE_CONSTANT
		{ after(grammarAccess.getINITIAL_CONSTAccess().getSIMPLE_CONSTANTParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getINITIAL_CONSTAccess().getVpKeyword_1()); }
		'Vp'
		{ after(grammarAccess.getINITIAL_CONSTAccess().getVpKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCONSTANTAccess().getNKeyword_0()); }
		'N'
		{ after(grammarAccess.getCONSTANTAccess().getNKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getCONSTANTAccess().getTKeyword_1()); }
		'T'
		{ after(grammarAccess.getCONSTANTAccess().getTKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getCONSTANTAccess().getEKeyword_2()); }
		'E'
		{ after(grammarAccess.getCONSTANTAccess().getEKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getCONSTANTAccess().getAKeyword_3()); }
		'a'
		{ after(grammarAccess.getCONSTANTAccess().getAKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getCONSTANTAccess().getSIZEKeyword_4()); }
		'SIZE'
		{ after(grammarAccess.getCONSTANTAccess().getSIZEKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getCONSTANTAccess().getSSIZEKeyword_5()); }
		'SSIZE'
		{ after(grammarAccess.getCONSTANTAccess().getSSIZEKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getCONSTANTAccess().getASIZEKeyword_6()); }
		'ASIZE'
		{ after(grammarAccess.getCONSTANTAccess().getASIZEKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getCONSTANTAccess().getNULLKeyword_7()); }
		'NULL'
		{ after(grammarAccess.getCONSTANTAccess().getNULLKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getCONSTANTAccess().getPhaseKeyword_8()); }
		'phase'
		{ after(grammarAccess.getCONSTANTAccess().getPhaseKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getCONSTANTAccess().getDECISIONKeyword_9()); }
		'DECISION'
		{ after(grammarAccess.getCONSTANTAccess().getDECISIONKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getCONSTANTAccess().getSIMPLE_CONSTANTParserRuleCall_10()); }
		ruleSIMPLE_CONSTANT
		{ after(grammarAccess.getCONSTANTAccess().getSIMPLE_CONSTANTParserRuleCall_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getVKeyword_0()); }
		'V'
		{ after(grammarAccess.getTypeAccess().getVKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getVKeyword_1()); }
		'V\''
		{ after(grammarAccess.getTypeAccess().getVKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTSKeyword_2()); }
		'TS'
		{ after(grammarAccess.getTypeAccess().getTSKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getVArrayKeyword_3()); }
		'VArray'
		{ after(grammarAccess.getTypeAccess().getVArrayKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTSArrayKeyword_4()); }
		'TSArray'
		{ after(grammarAccess.getTypeAccess().getTSArrayKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getBoolKeyword_5()); }
		'bool'
		{ after(grammarAccess.getTypeAccess().getBoolKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getIntKeyword_6()); }
		'int'
		{ after(grammarAccess.getTypeAccess().getIntKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getIntArrayKeyword_7()); }
		'intArray'
		{ after(grammarAccess.getTypeAccess().getIntArrayKeyword_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__0__Impl
	rule__Algorithm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getAlgorithmKeyword_0()); }
	'Algorithm'
	{ after(grammarAccess.getAlgorithmAccess().getAlgorithmKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__1__Impl
	rule__Algorithm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getNameAssignment_1()); }
	(rule__Algorithm__NameAssignment_1)
	{ after(grammarAccess.getAlgorithmAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__2__Impl
	rule__Algorithm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getAlgorithmAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__3__Impl
	rule__Algorithm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getVariabledeclarationAssignment_3()); }
	(rule__Algorithm__VariabledeclarationAssignment_3)
	{ after(grammarAccess.getAlgorithmAccess().getVariabledeclarationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__4__Impl
	rule__Algorithm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getDomainAssignment_4()); }
	(rule__Algorithm__DomainAssignment_4)?
	{ after(grammarAccess.getAlgorithmAccess().getDomainAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__5__Impl
	rule__Algorithm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getRoundlistAssignment_5()); }
	(rule__Algorithm__RoundlistAssignment_5)
	{ after(grammarAccess.getAlgorithmAccess().getRoundlistAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__6__Impl
	rule__Algorithm__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getInvAssignment_6()); }
	(rule__Algorithm__InvAssignment_6)?
	{ after(grammarAccess.getAlgorithmAccess().getInvAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getUvAssignment_7()); }
	(rule__Algorithm__UvAssignment_7)?
	{ after(grammarAccess.getAlgorithmAccess().getUvAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarialbeDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarialbeDeclaration__Group__0__Impl
	rule__VarialbeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarialbeDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarialbeDeclarationAccess().getVariableKeyword_0()); }
	'Variable'
	{ after(grammarAccess.getVarialbeDeclarationAccess().getVariableKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarialbeDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarialbeDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarialbeDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getVarialbeDeclarationAccess().getListAssignment_1()); }
		(rule__VarialbeDeclaration__ListAssignment_1)
		{ after(grammarAccess.getVarialbeDeclarationAccess().getListAssignment_1()); }
	)
	(
		{ before(grammarAccess.getVarialbeDeclarationAccess().getListAssignment_1()); }
		(rule__VarialbeDeclaration__ListAssignment_1)*
		{ after(grammarAccess.getVarialbeDeclarationAccess().getListAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecList__Group__0__Impl
	rule__VariableDecList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDecListAccess().getHiddenKeyword_0()); }
	('hidden')?
	{ after(grammarAccess.getVariableDecListAccess().getHiddenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecList__Group__1__Impl
	rule__VariableDecList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDecListAccess().getTypeAssignment_1()); }
	(rule__VariableDecList__TypeAssignment_1)
	{ after(grammarAccess.getVariableDecListAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecList__Group__2__Impl
	rule__VariableDecList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDecListAccess().getVariablenamelistAssignment_2()); }
	(rule__VariableDecList__VariablenamelistAssignment_2)
	{ after(grammarAccess.getVariableDecListAccess().getVariablenamelistAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDecListAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getVariableDecListAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableNameList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableNameList__Group__0__Impl
	rule__VariableNameList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableNameListAccess().getNameAssignment_0()); }
	(rule__VariableNameList__NameAssignment_0)
	{ after(grammarAccess.getVariableNameListAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableNameList__Group__1__Impl
	rule__VariableNameList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableNameListAccess().getGroup_1()); }
	(rule__VariableNameList__Group_1__0)?
	{ after(grammarAccess.getVariableNameListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableNameList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableNameListAccess().getGroup_2()); }
	(rule__VariableNameList__Group_2__0)*
	{ after(grammarAccess.getVariableNameListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableNameList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableNameList__Group_1__0__Impl
	rule__VariableNameList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableNameListAccess().getEqualsSignKeyword_1_0()); }
	'='
	{ after(grammarAccess.getVariableNameListAccess().getEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableNameList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableNameListAccess().getValueAssignment_1_1()); }
	(rule__VariableNameList__ValueAssignment_1_1)
	{ after(grammarAccess.getVariableNameListAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableNameList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableNameList__Group_2__0__Impl
	rule__VariableNameList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableNameListAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getVariableNameListAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableNameList__Group_2__1__Impl
	rule__VariableNameList__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableNameListAccess().getNameAssignment_2_1()); }
	(rule__VariableNameList__NameAssignment_2_1)
	{ after(grammarAccess.getVariableNameListAccess().getNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableNameList__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableNameListAccess().getGroup_2_2()); }
	(rule__VariableNameList__Group_2_2__0)?
	{ after(grammarAccess.getVariableNameListAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableNameList__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableNameList__Group_2_2__0__Impl
	rule__VariableNameList__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableNameListAccess().getEqualsSignKeyword_2_2_0()); }
	'='
	{ after(grammarAccess.getVariableNameListAccess().getEqualsSignKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableNameList__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableNameListAccess().getValueAssignment_2_2_1()); }
	(rule__VariableNameList__ValueAssignment_2_2_1)
	{ after(grammarAccess.getVariableNameListAccess().getValueAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__0__Impl
	rule__Domain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getDomainKeyword_0()); }
	'Domain'
	{ after(grammarAccess.getDomainAccess().getDomainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__1__Impl
	rule__Domain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDomainAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__2__Impl
	rule__Domain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getStatementListParserRuleCall_2()); }
	ruleStatementList
	{ after(grammarAccess.getDomainAccess().getStatementListParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__3__Impl
	rule__Domain__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getDomainAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getDomainAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoundList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoundList__Group__0__Impl
	rule__RoundList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundListAccess().getRoundAssignment_0()); }
	(rule__RoundList__RoundAssignment_0)
	{ after(grammarAccess.getRoundListAccess().getRoundAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoundList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundListAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getRoundListAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Round__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Round__Group__0__Impl
	rule__Round__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundAccess().getRoundKeyword_0()); }
	'Round'
	{ after(grammarAccess.getRoundAccess().getRoundKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Round__Group__1__Impl
	rule__Round__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRoundAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Round__Group__2__Impl
	rule__Round__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundAccess().getSendPartKeyword_2()); }
	'SendPart'
	{ after(grammarAccess.getRoundAccess().getSendPartKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Round__Group__3__Impl
	rule__Round__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundAccess().getSendAssignment_3()); }
	(rule__Round__SendAssignment_3)
	{ after(grammarAccess.getRoundAccess().getSendAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Round__Group__4__Impl
	rule__Round__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getRoundAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Round__Group__5__Impl
	rule__Round__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundAccess().getTransitionPartKeyword_5()); }
	'TransitionPart'
	{ after(grammarAccess.getRoundAccess().getTransitionPartKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Round__Group__6__Impl
	rule__Round__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundAccess().getTransitionAssignment_6()); }
	(rule__Round__TransitionAssignment_6)
	{ after(grammarAccess.getRoundAccess().getTransitionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Round__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getRoundAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SendPart__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0__0__Impl
	rule__SendPart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getIfKeyword_0_0()); }
	'if'
	{ after(grammarAccess.getSendPartAccess().getIfKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0__1__Impl
	rule__SendPart__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getSendPartAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0__2__Impl
	rule__SendPart__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getExpAssignment_0_2()); }
	(rule__SendPart__ExpAssignment_0_2)
	{ after(grammarAccess.getSendPartAccess().getExpAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0__3__Impl
	rule__SendPart__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getRightParenthesisKeyword_0_3()); }
	')'
	{ after(grammarAccess.getSendPartAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0__4__Impl
	rule__SendPart__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getSendKeyword_0_4()); }
	'send'
	{ after(grammarAccess.getSendPartAccess().getSendKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0__5__Impl
	rule__SendPart__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getLeftParenthesisKeyword_0_5()); }
	'('
	{ after(grammarAccess.getSendPartAccess().getLeftParenthesisKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0__6__Impl
	rule__SendPart__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getMessage1Assignment_0_6()); }
	(rule__SendPart__Message1Assignment_0_6)
	{ after(grammarAccess.getSendPartAccess().getMessage1Assignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0__7__Impl
	rule__SendPart__Group_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getCommaKeyword_0_7()); }
	','
	{ after(grammarAccess.getSendPartAccess().getCommaKeyword_0_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0__8__Impl
	rule__SendPart__Group_0__9
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getAlternatives_0_8()); }
	(rule__SendPart__Alternatives_0_8)
	{ after(grammarAccess.getSendPartAccess().getAlternatives_0_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0__9__Impl
	rule__SendPart__Group_0__10
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getRightParenthesisKeyword_0_9()); }
	')'
	{ after(grammarAccess.getSendPartAccess().getRightParenthesisKeyword_0_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getGroup_0_10()); }
	(rule__SendPart__Group_0_10__0)?
	{ after(grammarAccess.getSendPartAccess().getGroup_0_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SendPart__Group_0_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0_10__0__Impl
	rule__SendPart__Group_0_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getElseKeyword_0_10_0()); }
	'else'
	{ after(grammarAccess.getSendPartAccess().getElseKeyword_0_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0_10__1__Impl
	rule__SendPart__Group_0_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getSendKeyword_0_10_1()); }
	'send'
	{ after(grammarAccess.getSendPartAccess().getSendKeyword_0_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0_10__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0_10__2__Impl
	rule__SendPart__Group_0_10__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0_10__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getLeftParenthesisKeyword_0_10_2()); }
	'('
	{ after(grammarAccess.getSendPartAccess().getLeftParenthesisKeyword_0_10_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0_10__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0_10__3__Impl
	rule__SendPart__Group_0_10__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0_10__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getMessage2Assignment_0_10_3()); }
	(rule__SendPart__Message2Assignment_0_10_3)
	{ after(grammarAccess.getSendPartAccess().getMessage2Assignment_0_10_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0_10__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0_10__4__Impl
	rule__SendPart__Group_0_10__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0_10__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getCommaKeyword_0_10_4()); }
	','
	{ after(grammarAccess.getSendPartAccess().getCommaKeyword_0_10_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0_10__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0_10__5__Impl
	rule__SendPart__Group_0_10__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0_10__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getAlternatives_0_10_5()); }
	(rule__SendPart__Alternatives_0_10_5)
	{ after(grammarAccess.getSendPartAccess().getAlternatives_0_10_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0_10__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_0_10__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_0_10__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getRightParenthesisKeyword_0_10_6()); }
	')'
	{ after(grammarAccess.getSendPartAccess().getRightParenthesisKeyword_0_10_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SendPart__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_1__0__Impl
	rule__SendPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getSendKeyword_1_0()); }
	'send'
	{ after(grammarAccess.getSendPartAccess().getSendKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_1__1__Impl
	rule__SendPart__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getSendPartAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_1__2__Impl
	rule__SendPart__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getMessageAssignment_1_2()); }
	(rule__SendPart__MessageAssignment_1_2)
	{ after(grammarAccess.getSendPartAccess().getMessageAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_1__3__Impl
	rule__SendPart__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getCommaKeyword_1_3()); }
	','
	{ after(grammarAccess.getSendPartAccess().getCommaKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_1__4__Impl
	rule__SendPart__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getAlternatives_1_4()); }
	(rule__SendPart__Alternatives_1_4)
	{ after(grammarAccess.getSendPartAccess().getAlternatives_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendPart__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendPartAccess().getRightParenthesisKeyword_1_5()); }
	')'
	{ after(grammarAccess.getSendPartAccess().getRightParenthesisKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_0__0__Impl
	rule__Message__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getMessageAction_0_0()); }
	()
	{ after(grammarAccess.getMessageAccess().getMessageAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getGroup_0_1()); }
	(rule__Message__Group_0_1__0)
	{ after(grammarAccess.getMessageAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_0_1__0__Impl
	rule__Message__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getLessThanSignKeyword_0_1_0()); }
	'<'
	{ after(grammarAccess.getMessageAccess().getLessThanSignKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_0_1__1__Impl
	rule__Message__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getAlternatives_0_1_1()); }
	(rule__Message__Alternatives_0_1_1)
	{ after(grammarAccess.getMessageAccess().getAlternatives_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_0_1__2__Impl
	rule__Message__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getGroup_0_1_2()); }
	(rule__Message__Group_0_1_2__0)*
	{ after(grammarAccess.getMessageAccess().getGroup_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getGreaterThanSignKeyword_0_1_3()); }
	'>'
	{ after(grammarAccess.getMessageAccess().getGreaterThanSignKeyword_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group_0_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_0_1_2__0__Impl
	rule__Message__Group_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_0_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getCommaKeyword_0_1_2_0()); }
	','
	{ after(grammarAccess.getMessageAccess().getCommaKeyword_0_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_0_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_0_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_0_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getAlternatives_0_1_2_1()); }
	(rule__Message__Alternatives_0_1_2_1)
	{ after(grammarAccess.getMessageAccess().getAlternatives_0_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_1__0__Impl
	rule__Message__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getMessageAction_1_0()); }
	()
	{ after(grammarAccess.getMessageAccess().getMessageAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_1__1__Impl
	rule__Message__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getLessThanSignKeyword_1_1()); }
	'<'
	{ after(grammarAccess.getMessageAccess().getLessThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_1__2__Impl
	rule__Message__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getAckKeyword_1_2()); }
	'ack'
	{ after(grammarAccess.getMessageAccess().getAckKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getGreaterThanSignKeyword_1_3()); }
	'>'
	{ after(grammarAccess.getMessageAccess().getGreaterThanSignKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Invariant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__0__Impl
	rule__Invariant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getInvariantKeyword_0()); }
	'Invariant'
	{ after(grammarAccess.getInvariantAccess().getInvariantKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__1__Impl
	rule__Invariant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getInvariantAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__2__Impl
	rule__Invariant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getStatementListParserRuleCall_2()); }
	ruleStatementList
	{ after(grammarAccess.getInvariantAccess().getStatementListParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__3__Impl
	rule__Invariant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getInvariantAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getInvariantAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Univalence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Univalence__Group__0__Impl
	rule__Univalence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Univalence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnivalenceAccess().getUnivalenceKeyword_0()); }
	'Univalence'
	{ after(grammarAccess.getUnivalenceAccess().getUnivalenceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Univalence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Univalence__Group__1__Impl
	rule__Univalence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Univalence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnivalenceAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getUnivalenceAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Univalence__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Univalence__Group__2__Impl
	rule__Univalence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Univalence__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnivalenceAccess().getStatementListParserRuleCall_2()); }
	ruleStatementList
	{ after(grammarAccess.getUnivalenceAccess().getStatementListParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Univalence__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Univalence__Group__3__Impl
	rule__Univalence__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Univalence__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnivalenceAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getUnivalenceAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Univalence__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Univalence__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Univalence__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnivalenceAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getUnivalenceAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__0__Impl
	rule__StatementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getStatementListAction_0()); }
	()
	{ after(grammarAccess.getStatementListAccess().getStatementListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getGroup_1()); }
	(rule__StatementList__Group_1__0)*
	{ after(grammarAccess.getStatementListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group_1__0__Impl
	rule__StatementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getStatementsAssignment_1_0()); }
	(rule__StatementList__StatementsAssignment_1_0)
	{ after(grammarAccess.getStatementListAccess().getStatementsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__0__Impl
	rule__Statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getForKeyword_2_0()); }
	'for'
	{ after(grammarAccess.getStatementAccess().getForKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__1__Impl
	rule__Statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLeftSquareBracketKeyword_2_1()); }
	'['
	{ after(grammarAccess.getStatementAccess().getLeftSquareBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__2__Impl
	rule__Statement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getVarAssignment_2_2()); }
	(rule__Statement__VarAssignment_2_2)
	{ after(grammarAccess.getStatementAccess().getVarAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__3__Impl
	rule__Statement__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getEqualsSignKeyword_2_3()); }
	'='
	{ after(grammarAccess.getStatementAccess().getEqualsSignKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__4__Impl
	rule__Statement__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getExpAssignment_2_4()); }
	(rule__Statement__ExpAssignment_2_4)
	{ after(grammarAccess.getStatementAccess().getExpAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__5__Impl
	rule__Statement__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getToKeyword_2_5()); }
	'to'
	{ after(grammarAccess.getStatementAccess().getToKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__6__Impl
	rule__Statement__Group_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getExpAssignment_2_6()); }
	(rule__Statement__ExpAssignment_2_6)
	{ after(grammarAccess.getStatementAccess().getExpAssignment_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__7__Impl
	rule__Statement__Group_2__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightSquareBracketKeyword_2_7()); }
	']'
	{ after(grammarAccess.getStatementAccess().getRightSquareBracketKeyword_2_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAssignment_2_8()); }
	(rule__Statement__StatementAssignment_2_8)
	{ after(grammarAccess.getStatementAccess().getStatementAssignment_2_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__0__Impl
	rule__Statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getIfKeyword_3_0()); }
	'if'
	{ after(grammarAccess.getStatementAccess().getIfKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__1__Impl
	rule__Statement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_3_1()); }
	'('
	{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__2__Impl
	rule__Statement__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getExpAssignment_3_2()); }
	(rule__Statement__ExpAssignment_3_2)
	{ after(grammarAccess.getStatementAccess().getExpAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__3__Impl
	rule__Statement__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__4__Impl
	rule__Statement__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAssignment_3_4()); }
	(rule__Statement__StatementAssignment_3_4)
	{ after(grammarAccess.getStatementAccess().getStatementAssignment_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getGroup_3_5()); }
	(rule__Statement__Group_3_5__0)?
	{ after(grammarAccess.getStatementAccess().getGroup_3_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_3_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3_5__0__Impl
	rule__Statement__Group_3_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getElseKeyword_3_5_0()); }
	'else'
	{ after(grammarAccess.getStatementAccess().getElseKeyword_3_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAssignment_3_5_1()); }
	(rule__Statement__StatementAssignment_3_5_1)
	{ after(grammarAccess.getStatementAccess().getStatementAssignment_3_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_4__0__Impl
	rule__Statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getAssumeKeyword_4_0()); }
	'assume'
	{ after(grammarAccess.getStatementAccess().getAssumeKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_4__1__Impl
	rule__Statement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_4_1()); }
	'('
	{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_4__2__Impl
	rule__Statement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_4_2()); }
	ruleExpression
	{ after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_4_3()); }
	')'
	{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__0__Impl
	rule__Statement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getAssertKeyword_5_0()); }
	'assert'
	{ after(grammarAccess.getStatementAccess().getAssertKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__1__Impl
	rule__Statement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_5_1()); }
	'('
	{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__2__Impl
	rule__Statement__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_5_2()); }
	ruleExpression
	{ after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_5_3()); }
	')'
	{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_6__0__Impl
	rule__Statement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLeftCurlyBracketKeyword_6_0()); }
	'{'
	{ after(grammarAccess.getStatementAccess().getLeftCurlyBracketKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_6__1__Impl
	rule__Statement__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementListParserRuleCall_6_1()); }
	ruleStatementList
	{ after(grammarAccess.getStatementAccess().getStatementListParserRuleCall_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightCurlyBracketKeyword_6_2()); }
	'}'
	{ after(grammarAccess.getStatementAccess().getRightCurlyBracketKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getVarAssignment_0()); }
	(rule__Assignment__VarAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpAssignment_2()); }
	(rule__Assignment__ExpAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayVariable__Group__0__Impl
	rule__ArrayVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayVariableAccess().getNameAssignment_0()); }
	(rule__ArrayVariable__NameAssignment_0)
	{ after(grammarAccess.getArrayVariableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayVariable__Group__1__Impl
	rule__ArrayVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayVariableAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getArrayVariableAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayVariable__Group__2__Impl
	rule__ArrayVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayVariableAccess().getExpAssignment_2()); }
	(rule__ArrayVariable__ExpAssignment_2)
	{ after(grammarAccess.getArrayVariableAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayVariableAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getArrayVariableAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decision__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decision__Group__0__Impl
	rule__Decision__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decision__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecisionAccess().getDECIDEKeyword_0()); }
	'DECIDE'
	{ after(grammarAccess.getDecisionAccess().getDECIDEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decision__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decision__Group__1__Impl
	rule__Decision__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Decision__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecisionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDecisionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decision__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decision__Group__2__Impl
	rule__Decision__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Decision__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecisionAccess().getExpressionParserRuleCall_2()); }
	ruleExpression
	{ after(grammarAccess.getDecisionAccess().getExpressionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decision__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decision__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decision__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecisionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getDecisionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpAssignment_0()); }
	(rule__Expression__ExpAssignment_0)
	{ after(grammarAccess.getExpressionAccess().getExpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
	(rule__Expression__Group_1__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getVerticalLineVerticalLineKeyword_1_0()); }
	'||'
	{ after(grammarAccess.getExpressionAccess().getVerticalLineVerticalLineKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpAssignment_1_1()); }
	(rule__Expression__ExpAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getExpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConjunctiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConjunctiveExpression__Group__0__Impl
	rule__ConjunctiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjunctiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctiveExpressionAccess().getExpAssignment_0()); }
	(rule__ConjunctiveExpression__ExpAssignment_0)
	{ after(grammarAccess.getConjunctiveExpressionAccess().getExpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjunctiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConjunctiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjunctiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctiveExpressionAccess().getGroup_1()); }
	(rule__ConjunctiveExpression__Group_1__0)*
	{ after(grammarAccess.getConjunctiveExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConjunctiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConjunctiveExpression__Group_1__0__Impl
	rule__ConjunctiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjunctiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctiveExpressionAccess().getAmpersandAmpersandKeyword_1_0()); }
	'&&'
	{ after(grammarAccess.getConjunctiveExpressionAccess().getAmpersandAmpersandKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjunctiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConjunctiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjunctiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctiveExpressionAccess().getExpAssignment_1_1()); }
	(rule__ConjunctiveExpression__ExpAssignment_1_1)
	{ after(grammarAccess.getConjunctiveExpressionAccess().getExpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getExpAssignment_0()); }
	(rule__EqualityExpression__ExpAssignment_0)
	{ after(grammarAccess.getEqualityExpressionAccess().getExpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
	(rule__EqualityExpression__Group_1__0)?
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getAlternatives_1_0()); }
	(rule__EqualityExpression__Alternatives_1_0)
	{ after(grammarAccess.getEqualityExpressionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getExpAssignment_1_1()); }
	(rule__EqualityExpression__ExpAssignment_1_1)
	{ after(grammarAccess.getEqualityExpressionAccess().getExpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getExpAssignment_0()); }
	(rule__RelationalExpression__ExpAssignment_0)
	{ after(grammarAccess.getRelationalExpressionAccess().getExpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
	(rule__RelationalExpression__Group_1__0)?
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getAlternatives_1_0()); }
	(rule__RelationalExpression__Alternatives_1_0)
	{ after(grammarAccess.getRelationalExpressionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getExpAssignment_1_1()); }
	(rule__RelationalExpression__ExpAssignment_1_1)
	{ after(grammarAccess.getRelationalExpressionAccess().getExpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group__0__Impl
	rule__SimpleExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getTermAssignment_0()); }
	(rule__SimpleExpression__TermAssignment_0)
	{ after(grammarAccess.getSimpleExpressionAccess().getTermAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getGroup_1()); }
	(rule__SimpleExpression__Group_1__0)*
	{ after(grammarAccess.getSimpleExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group_1__0__Impl
	rule__SimpleExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getAlternatives_1_0()); }
	(rule__SimpleExpression__Alternatives_1_0)
	{ after(grammarAccess.getSimpleExpressionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getTermAssignment_1_1()); }
	(rule__SimpleExpression__TermAssignment_1_1)
	{ after(grammarAccess.getSimpleExpressionAccess().getTermAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getFactorAssignment_0()); }
	(rule__Term__FactorAssignment_0)
	{ after(grammarAccess.getTermAccess().getFactorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1()); }
	(rule__Term__Group_1__0)*
	{ after(grammarAccess.getTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getAlternatives_1_0()); }
	(rule__Term__Alternatives_1_0)
	{ after(grammarAccess.getTermAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getFactorAssignment_1_1()); }
	(rule__Term__FactorAssignment_1_1)
	{ after(grammarAccess.getTermAccess().getFactorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getFactorAction_1_0()); }
	()
	{ after(grammarAccess.getFactorAccess().getFactorAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getCONSTANTParserRuleCall_1_1()); }
	ruleCONSTANT
	{ after(grammarAccess.getFactorAccess().getCONSTANTParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_2__0__Impl
	rule__Factor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getFactorAction_2_0()); }
	()
	{ after(grammarAccess.getFactorAccess().getFactorAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getIsCoordKeyword_2_1()); }
	'isCoord'
	{ after(grammarAccess.getFactorAccess().getIsCoordKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_3__0__Impl
	rule__Factor__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getFactorAction_3_0()); }
	()
	{ after(grammarAccess.getFactorAccess().getFactorAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getCoordKeyword_3_1()); }
	'Coord'
	{ after(grammarAccess.getFactorAccess().getCoordKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_4__0__Impl
	rule__Factor__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getRcvKeyword_4_0()); }
	'rcv'
	{ after(grammarAccess.getFactorAccess().getRcvKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_4__1__Impl
	rule__Factor__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getLeftSquareBracketKeyword_4_1()); }
	'['
	{ after(grammarAccess.getFactorAccess().getLeftSquareBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_4__2__Impl
	rule__Factor__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getExpAssignment_4_2()); }
	(rule__Factor__ExpAssignment_4_2)
	{ after(grammarAccess.getFactorAccess().getExpAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_4__3__Impl
	rule__Factor__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getRightSquareBracketKeyword_4_3()); }
	']'
	{ after(grammarAccess.getFactorAccess().getRightSquareBracketKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_4__4__Impl
	rule__Factor__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getFullStopKeyword_4_4()); }
	'.'
	{ after(grammarAccess.getFactorAccess().getFullStopKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_4__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getVarAssignment_4_5()); }
	(rule__Factor__VarAssignment_4_5)
	{ after(grammarAccess.getFactorAccess().getVarAssignment_4_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_5__0__Impl
	rule__Factor__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_5_0()); }
	'('
	{ after(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_5__1__Impl
	rule__Factor__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getExpAssignment_5_1()); }
	(rule__Factor__ExpAssignment_5_1)
	{ after(grammarAccess.getFactorAccess().getExpAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getRightParenthesisKeyword_5_2()); }
	')'
	{ after(grammarAccess.getFactorAccess().getRightParenthesisKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAlgorithmAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__VariabledeclarationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmAccess().getVariabledeclarationVarialbeDeclarationParserRuleCall_3_0()); }
		ruleVarialbeDeclaration
		{ after(grammarAccess.getAlgorithmAccess().getVariabledeclarationVarialbeDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__DomainAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmAccess().getDomainDomainParserRuleCall_4_0()); }
		ruleDomain
		{ after(grammarAccess.getAlgorithmAccess().getDomainDomainParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__RoundlistAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmAccess().getRoundlistRoundListParserRuleCall_5_0()); }
		ruleRoundList
		{ after(grammarAccess.getAlgorithmAccess().getRoundlistRoundListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__InvAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmAccess().getInvInvariantParserRuleCall_6_0()); }
		ruleInvariant
		{ after(grammarAccess.getAlgorithmAccess().getInvInvariantParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__UvAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmAccess().getUvUnivalenceParserRuleCall_7_0()); }
		ruleUnivalence
		{ after(grammarAccess.getAlgorithmAccess().getUvUnivalenceParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarialbeDeclaration__ListAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarialbeDeclarationAccess().getListVariableDecListParserRuleCall_1_0()); }
		ruleVariableDecList
		{ after(grammarAccess.getVarialbeDeclarationAccess().getListVariableDecListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecList__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDecListAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getVariableDecListAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecList__VariablenamelistAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDecListAccess().getVariablenamelistVariableNameListParserRuleCall_2_0()); }
		ruleVariableNameList
		{ after(grammarAccess.getVariableDecListAccess().getVariablenamelistVariableNameListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableNameListAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableNameListAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableNameListAccess().getValueINITIAL_CONSTParserRuleCall_1_1_0()); }
		ruleINITIAL_CONST
		{ after(grammarAccess.getVariableNameListAccess().getValueINITIAL_CONSTParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__NameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableNameListAccess().getNameIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableNameListAccess().getNameIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNameList__ValueAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableNameListAccess().getValueINITIAL_CONSTParserRuleCall_2_2_1_0()); }
		ruleINITIAL_CONST
		{ after(grammarAccess.getVariableNameListAccess().getValueINITIAL_CONSTParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundList__RoundAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoundListAccess().getRoundRoundParserRuleCall_0_0()); }
		ruleRound
		{ after(grammarAccess.getRoundListAccess().getRoundRoundParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__SendAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoundAccess().getSendSendPartParserRuleCall_3_0()); }
		ruleSendPart
		{ after(grammarAccess.getRoundAccess().getSendSendPartParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Round__TransitionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoundAccess().getTransitionTransitionPartParserRuleCall_6_0()); }
		ruleTransitionPart
		{ after(grammarAccess.getRoundAccess().getTransitionTransitionPartParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__ExpAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendPartAccess().getExpExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSendPartAccess().getExpExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Message1Assignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendPartAccess().getMessage1MessageParserRuleCall_0_6_0()); }
		ruleMessage
		{ after(grammarAccess.getSendPartAccess().getMessage1MessageParserRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__Message2Assignment_0_10_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendPartAccess().getMessage2MessageParserRuleCall_0_10_3_0()); }
		ruleMessage
		{ after(grammarAccess.getSendPartAccess().getMessage2MessageParserRuleCall_0_10_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendPart__MessageAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendPartAccess().getMessageMessageParserRuleCall_1_2_0()); }
		ruleMessage
		{ after(grammarAccess.getSendPartAccess().getMessageMessageParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__MsgAssignment_0_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageAccess().getMsgIDTerminalRuleCall_0_1_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMessageAccess().getMsgIDTerminalRuleCall_0_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__MsgAssignment_0_1_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageAccess().getMsgIDTerminalRuleCall_0_1_2_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMessageAccess().getMsgIDTerminalRuleCall_0_1_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__StatementsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_1_0_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__VarAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getVarVariableParserRuleCall_2_2_0()); }
		ruleVariable
		{ after(grammarAccess.getStatementAccess().getVarVariableParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ExpAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getExpExpressionParserRuleCall_2_4_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementAccess().getExpExpressionParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ExpAssignment_2_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getExpExpressionParserRuleCall_2_6_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementAccess().getExpExpressionParserRuleCall_2_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementAssignment_2_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementStatementParserRuleCall_2_8_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementAccess().getStatementStatementParserRuleCall_2_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ExpAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getExpExpressionParserRuleCall_3_2_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementAccess().getExpExpressionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementAssignment_3_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementStatementParserRuleCall_3_4_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementAccess().getStatementStatementParserRuleCall_3_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementAssignment_3_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementStatementParserRuleCall_3_5_1_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementAccess().getStatementStatementParserRuleCall_3_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getVarVariableParserRuleCall_0_0()); }
		ruleVariable
		{ after(grammarAccess.getAssignmentAccess().getVarVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignmentAccess().getExpExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalVariable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNormalVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getNormalVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayVariableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getArrayVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayVariableAccess().getExpExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayVariableAccess().getExpExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpConjunctiveExpressionParserRuleCall_0_0()); }
		ruleConjunctiveExpression
		{ after(grammarAccess.getExpressionAccess().getExpConjunctiveExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpConjunctiveExpressionParserRuleCall_1_1_0()); }
		ruleConjunctiveExpression
		{ after(grammarAccess.getExpressionAccess().getExpConjunctiveExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjunctiveExpression__ExpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjunctiveExpressionAccess().getExpEqualityExpressionParserRuleCall_0_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getConjunctiveExpressionAccess().getExpEqualityExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjunctiveExpression__ExpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjunctiveExpressionAccess().getExpEqualityExpressionParserRuleCall_1_1_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getConjunctiveExpressionAccess().getExpEqualityExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__ExpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getExpRelationalExpressionParserRuleCall_0_0()); }
		ruleRelationalExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getExpRelationalExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__ExpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getExpRelationalExpressionParserRuleCall_1_1_0()); }
		ruleRelationalExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getExpRelationalExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__ExpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getExpSimpleExpressionParserRuleCall_0_0()); }
		ruleSimpleExpression
		{ after(grammarAccess.getRelationalExpressionAccess().getExpSimpleExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__ExpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getExpSimpleExpressionParserRuleCall_1_1_0()); }
		ruleSimpleExpression
		{ after(grammarAccess.getRelationalExpressionAccess().getExpSimpleExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__TermAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleExpressionAccess().getTermTermParserRuleCall_0_0()); }
		ruleTerm
		{ after(grammarAccess.getSimpleExpressionAccess().getTermTermParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__TermAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleExpressionAccess().getTermTermParserRuleCall_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getSimpleExpressionAccess().getTermTermParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__FactorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getFactorFactorParserRuleCall_0_0()); }
		ruleFactor
		{ after(grammarAccess.getTermAccess().getFactorFactorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__FactorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getFactorFactorParserRuleCall_1_1_0()); }
		ruleFactor
		{ after(grammarAccess.getTermAccess().getFactorFactorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__ExpAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getExpExpressionParserRuleCall_4_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFactorAccess().getExpExpressionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__VarAssignment_4_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getVarVariableParserRuleCall_4_5_0()); }
		ruleVariable
		{ after(grammarAccess.getFactorAccess().getVarVariableParserRuleCall_4_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__ExpAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getExpExpressionParserRuleCall_5_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFactorAccess().getExpExpressionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_NUMBER : ('0'|'1'..'9' ('0'..'9')*);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
